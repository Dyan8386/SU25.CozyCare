// <auto-generated />
using System;
using CozyCare.IdentityService.Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CozyCare.IdentityService.Migrations
{
    [DbContext(typeof(CozyCareIdentityDbContext))]
    [Migration("20250708031934_Fix_Account_CreatedBy_Nullable")]
    partial class Fix_Account_CreatedBy_Nullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.Account", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountId"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("fullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int>("statusId")
                        .HasColumnType("int");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("accountId")
                        .HasName("PK__Accounts__F267251E562754A3");

                    b.HasIndex("createdBy");

                    b.HasIndex("roleId");

                    b.HasIndex("statusId");

                    b.HasIndex("updatedBy");

                    b.HasIndex(new[] { "email" }, "UQ__Accounts__AB6E6164BE93AEE0")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.AccountStatus", b =>
                {
                    b.Property<int>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statusId"));

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("statusId")
                        .HasName("PK__AccountS__36257A184AF21423");

                    b.HasIndex(new[] { "statusName" }, "UQ__AccountS__6A50C21291DAFC7D")
                        .IsUnique();

                    b.ToTable("AccountStatuses");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("roleId")
                        .HasName("PK__Roles__CD98462AA584129C");

                    b.HasIndex(new[] { "roleName" }, "UQ__Roles__B1947861DD1E251C")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.Account", b =>
                {
                    b.HasOne("CozyCare.IdentityService.Domain.Entities.Account", "createdByNavigation")
                        .WithMany("InversecreatedByNavigation")
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Accounts_CreatedBy");

                    b.HasOne("CozyCare.IdentityService.Domain.Entities.Role", "role")
                        .WithMany("Accounts")
                        .HasForeignKey("roleId")
                        .IsRequired()
                        .HasConstraintName("FK_Accounts_Roles");

                    b.HasOne("CozyCare.IdentityService.Domain.Entities.AccountStatus", "status")
                        .WithMany("Accounts")
                        .HasForeignKey("statusId")
                        .IsRequired()
                        .HasConstraintName("FK_Accounts_Status");

                    b.HasOne("CozyCare.IdentityService.Domain.Entities.Account", "updatedByNavigation")
                        .WithMany("InverseupdatedByNavigation")
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Accounts_UpdatedBy");

                    b.Navigation("createdByNavigation");

                    b.Navigation("role");

                    b.Navigation("status");

                    b.Navigation("updatedByNavigation");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.Account", b =>
                {
                    b.Navigation("InversecreatedByNavigation");

                    b.Navigation("InverseupdatedByNavigation");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.AccountStatus", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("CozyCare.IdentityService.Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
